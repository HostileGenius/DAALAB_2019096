1







#include <stdio.h>

void insertion_sort(int arr[], int n, int *comparisons, int *shifts) {
    int i, j, key;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;
        while (j >= 0 && arr[j] > key) {
            (*comparisons)++;
            arr[j+1] = arr[j];
            (*shifts)++;
            j--;
        }
        arr[j+1] = key;
        (*shifts)++;
    }
}

int main() {
    int t, n, i, j;
    printf(" ENTER NO. OF TEST CASES : ");
    scanf("%d", &t);
    for (i = 0; i < t; i++) {
        printf(" ENTER SIZE : ");
        scanf("%d", &n);
        int arr[n];
        for (j = 0; j < n; j++) {
            printf(" ENTER ELEMENT : ");
            scanf("%d", &arr[j]);
        }
        int comparisons = 0, shifts = 0;
        insertion_sort(arr, n, &comparisons, &shifts);
        printf("SORTED ARRAY : ");
        for (j = 0; j < n; j++) {
            printf("%d ", arr[j]);
        }
        printf("\nCOMPARISONS : %d\n", comparisons);
        printf("SHIFTS : %d\n", shifts);
    }
    return 0;
}






2


#include <stdio.h>

void selection_sort(int arr[], int n, int* comparisons, int* swaps) {
    for (int i = 0; i < n-1; i++) {
        int min_index = i;
        for (int j = i+1; j < n; j++) {
            (*comparisons)++;
            if (arr[j] < arr[min_index]) {
                min_index = j;
            }
        }
        if (min_index != i) {
            int temp = arr[i];
            arr[i] = arr[min_index];
            arr[min_index] = temp;
            (*swaps)++;
        }
    }
}

int main() {
    int T;
    printf(" ENTER THE NO. OF TEST CASES : ");
    scanf("%d", &T);
    for (int i = 0; i < T; i++) {
        int n;
        printf(" ENTER SIZE : ");
        scanf("%d", &n);
        int arr[n];
        for (int j = 0; j < n; j++) {
            printf(" ENTER ELEMENT : ");
            scanf("%d", &arr[j]);
        }
        int comparisons = 0;
        int swaps = 0;
        selection_sort(arr, n, &comparisons, &swaps);
        printf(" SORTED ARRAY :  ");
        for (int j = 0; j < n; j++) {
            printf("%d ", arr[j]);
        }
        printf("\nCOMPARISONS: %d\n SWAPS :  %d\n", comparisons, swaps);
    }
    return 0;
}




3


#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
    return ((int)a - (int)b);
}
int hasDuplicate(int arr[], int n) {
    
    qsort(arr, n, sizeof(int), compare);

  
    for(int i = 1; i < n; i++) {
        if(arr[i] == arr[i-1]) {
            return 1;
        }
    }

    return 0;
}




int main() {
    int t;
    printf(" ENTER THE NO. OF TEST CASES : ");
    scanf("%d", &t);

    while(t--) {
        int n;
        printf(" ENTER THE SIZE : ");
        scanf("%d", &n);

        int arr[n];
        for(int i = 0; i < n; i++) {
            printf("ENTER THE ELEMENTS : ");
            scanf("%d", &arr[i]);
        }

        if(hasDuplicate(arr, n)) {
            printf(" YES \n");
        }
        else {
            printf("  NO \n");
        }
    }

    return 0;
}






